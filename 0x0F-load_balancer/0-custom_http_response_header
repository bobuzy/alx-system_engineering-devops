#!/usr/bin/env bash
# This script configures Nginx so that its HTTP response contains a custom header

# Update the package list and install Nginx
sudo apt update
sudo apt install -y nginx

# Allow Nginx HTTP traffic through the firewall
sudo ufw allow 'Nginx HTTP'

# Create /var/www if it doesn't exist and set ownership and permissions
# -p option ensures parent directories are created as needed
sudo mkdir -p /var/www
# Change ownership of /var/www to the current user for easier editing
sudo chown -R "$USER":"$USER" /var/www
# Set permissions for /var/www to ensure it is accessible
sudo chmod -R 755 /var/www

# Create the directories /var/www/html and /var/www/error if they do not exist
mkdir -p /var/www/html /var/www/error

# Create a simple index.html file in /var/www/html
echo "Hello Server!" > /var/www/html/index.html

# Create a custom 404 error page in /var/www/html
echo "error page" > /var/www/html/error_404.html

# Backup the default Nginx configuration file
sudo cp /etc/nginx/sites-enabled/default /etc/nginx/sites-enabled/default.backup

# Disable SC2154 for the following block
# This tells ShellCheck to ignore warnings about undefined variables
# shellcheck disable=SC2154

# Define the custom Nginx server configuration
server_config=\
"server {
		listen 80 default_server;
		listen [::]:80 default_server;
		root /var/www/html;
		index index.html index.htm index.nginx-debian.html;
		server_name _;
		add_header X-Served-By \$hostname;
		location / {
			try_files \$uri \$uri/ =404;
		}
		if (\$request_filename ~ redirect_me) {
			rewrite ^ https://th3-gr00t.tk/ permanent;
		}
		error_page 404 /error_404.html;
		location = /error_404.html {
			internal;
		}
}"

# Write the custom server configuration to the Nginx default configuration file
echo "$server_config" | sudo dd status=none of=/etc/nginx/sites-enabled/default

# Restart Nginx to apply the new configuration
sudo service nginx restart
